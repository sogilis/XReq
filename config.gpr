-------------------------------------------------------------------------------
--  XReq  --  Behaviour Driven Developpement tool for compiled languages     --
--  Copyright (c) 2010, SOGILIS <http://sogilis.com>                         --
--                                                                           --
--  This program is free software: you can redistribute it and/or modify     --
--  it under the terms of the GNU Affero General Public License as           --
--  published by the Free Software Foundation, either version 3 of the       --
--  License, or (at your option) any later version.                          --
--                                                                           --
--  This program is distributed in the hope that it will be useful,          --
--  but WITHOUT ANY WARRANTY; without even the implied warranty of           --
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            --
--  GNU Affero General Public License for more details.                      --
--                                                                           --
--  You should have received a copy of the GNU Affero General Public License --
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.    --
--                                                                           --
-------------------------------------------------------------------------------
-- kate: hl Ada; indent-width 3;

abstract project Config is

   --  http://gcc.gnu.org/onlinedocs/gcc-3.4.6/gnat_ugn_unw/Style-Checking.html

   Ada_Switches := (
      "-gnat05",        --  Ada 2005
      "-gnata",         --  Assertions enabled
      "-gnatwa",        --  All warnings
      "-gnatf",         --  Full errors
      "-gnato",         --  Check numeric overflow
      "-gnatwe",        --  Warnings as error
      "-gnaty"          --  Style checking
      );

   Ada_Switches_Release := Ada_Switches & (
      "-O2"             --  Optimization
      );

   Ada_Switches_Debug := Ada_Switches & (
      "-gnata",         --  Pragma Debug and Assert
      "-gnatVa",        --  Validity checking
--    "-gnatD",         --  Output low level code
      "-g"              --  Debug
      );

   Ada_Switches_Binder_Debug :=  (
      "-E"              -- get strack information on exceptions
      );

   Ada_Switches_Linker_Debug :=  (
      );

   Ada_Switches_Coverage := Ada_Switches_Debug & (
      "-fprofile-arcs", -- to use gcov
      "-ftest-coverage" -- to use gcov
      );

   Ada_Switches_Linker_Coverage := Ada_Switches_Linker_Debug & (
      "-fprofile-arcs"  -- to use gcov
      );

   Ada_Switches_Binder_Coverage := Ada_Switches_Binder_Debug;

   package Builder is
   end Builder;

   package Compiler is
   end Compiler;

end Config;
